"""empty message

Revision ID: 99d530d2e265
Revises:
Create Date: 2023-09-05 23:15:03.672915

"""
from alembic import op
import sqlalchemy as sa
import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = '99d530d2e265'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('username', sa.String(
                        length=40), nullable=False),
                    sa.Column('email', sa.String(length=255), nullable=False),
                    sa.Column('hashed_password', sa.String(
                        length=255), nullable=False),
                    sa.Column('first_name', sa.String(
                        length=255), nullable=False),
                    sa.Column('last_name', sa.String(
                        length=255), nullable=True),
                    sa.Column('phone_number', sa.String(
                        length=255), nullable=True),
                    sa.Column('image_url', sa.String(
                        length=255), nullable=True),
                    sa.Column('address', sa.String(
                        length=255), nullable=False),
                    sa.Column('lat', sa.Numeric(
                        scale=13, asdecimal=False), nullable=True),
                    sa.Column('lng', sa.Numeric(
                        scale=13, asdecimal=False), nullable=True),
                    sa.Column('zip', sa.String(length=12), nullable=True),
                    sa.Column('city', sa.String(length=40), nullable=True),
                    sa.Column('state', sa.String(length=2), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email')
                    )
    op.create_table('restaurants',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('owner_id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=120), nullable=False),
                    sa.Column('image_url', sa.String(
                        length=255), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('delivery_fee', sa.Numeric(
                        precision=4, scale=2), nullable=True),
                    sa.Column('cusine_types', sa.String(), nullable=False),
                    sa.Column('price_ranges', sa.Enum('$', '$$', '$$$',
                                                      '$$$$', name='price_ranges'), nullable=True),
                    sa.Column('address', sa.String(
                        length=255), nullable=False),
                    sa.Column('city', sa.String(length=40), nullable=True),
                    sa.Column('state', sa.String(length=2), nullable=True),
                    sa.Column('lat', sa.Numeric(
                        scale=13, asdecimal=False), nullable=True),
                    sa.Column('lng', sa.Numeric(
                        scale=13, asdecimal=False), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
                    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('favorites',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('restaurant_id', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['restaurant_id'], ['restaurants.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('menuitems',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('restaurant_id', sa.Integer(), nullable=False),
                    sa.Column('item_name', sa.String(
                        length=255), nullable=False),
                    sa.Column('price', sa.Numeric(
                        precision=5, scale=2), nullable=False),
                    sa.Column('image_url', sa.String(
                        length=255), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('item_type', sa.String(), nullable=True),
                    sa.Column('calory', sa.Integer(), nullable=True),
                    sa.Column('num_likes', sa.Integer(), nullable=False),
                    sa.Column('num_dislikes', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['restaurant_id'], ['restaurants.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('reviews',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('reviewer_id', sa.Integer(), nullable=False),
                    sa.Column('restaurant_id', sa.Integer(), nullable=False),
                    sa.Column('rating', sa.Integer(), nullable=False),
                    sa.Column('message', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['restaurant_id'], ['restaurants.id'], ),
                    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('orders',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('restaurant_id', sa.Integer(), nullable=False),
                    sa.Column('review_id', sa.Integer(), nullable=True),
                    sa.Column('tip', sa.Numeric(
                        precision=4, scale=2), nullable=False),
                    sa.Column('is_pickup', sa.Boolean(), nullable=False),
                    sa.Column('is_priority', sa.Boolean(), nullable=False),
                    sa.Column('is_complete', sa.Boolean(), nullable=False),
                    sa.Column('delivery_address', sa.String(
                        length=255), nullable=True),
                    sa.Column('delivery_lat', sa.Numeric(
                        scale=13, asdecimal=False), nullable=True),
                    sa.Column('delivery_lng', sa.Numeric(
                        scale=13, asdecimal=False), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['restaurant_id'], ['restaurants.id'], ),
                    sa.ForeignKeyConstraint(['review_id'], ['reviews.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('orderitems',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('order_id', sa.Integer(), nullable=False),
                    sa.Column('item_id', sa.Integer(), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.Column('is_like', sa.Boolean(), nullable=False),
                    sa.Column('is_dislike', sa.Boolean(), nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
                    sa.ForeignKeyConstraint(['item_id'], ['menuitems.id'], ),
                    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE restaurants SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE favorites SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE menuitems SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE orders SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE reviews SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE orderitems SET SCHEMA {SCHEMA};")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orderitems')
    op.drop_table('orders')
    op.drop_table('reviews')
    op.drop_table('menuitems')
    op.drop_table('favorites')
    op.drop_table('restaurants')
    op.drop_table('users')
    # ### end Alembic commands ###
